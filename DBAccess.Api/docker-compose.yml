version: '3.8'

services:
  dbaccess-api:
    build:
      context: .
      dockerfile: Dockerfile
    image: dbaccess-api:latest
    container_name: dbaccess-api
    restart: unless-stopped
    
    ports:
      - "8080:8080"
    
    environment:
      # Application Settings
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      
      # Database Connection (customize these)
      - DBACCESS_MSSQL_SERVER=61.163.200.245
      - DBACCESS_MSSQL_USER=sa
      - DBACCESS_MSSQL_PASSWORD=GalaxyS24
      
      # Security Settings (optional)
      - DBACCESS_API_KEY=${DBACCESS_API_KEY:-}
      - DBACCESS_SQL_WHITELIST=${DBACCESS_SQL_WHITELIST:-false}
      - DBACCESS_SQL_STRICT_WHERE=${DBACCESS_SQL_STRICT_WHERE:-false}
      
      # Pagination Limits
      - DBACCESS_MAX_PAGE_SIZE=${DBACCESS_MAX_PAGE_SIZE:-1000}
      - DBACCESS_MAX_OFFSET=${DBACCESS_MAX_OFFSET:-1000000}
      
      # Allowed Resources (when whitelist enabled)
      - DBACCESS_ALLOWED_TABLES=${DBACCESS_ALLOWED_TABLES:-}
      - DBACCESS_ALLOWED_FUNCTIONS=${DBACCESS_ALLOWED_FUNCTIONS:-}
      - DBACCESS_ALLOWED_COLUMNS=${DBACCESS_ALLOWED_COLUMNS:-}
      
      # .NET Runtime
      - DOTNET_RUNNING_IN_CONTAINER=true
      - DOTNET_EnableDiagnostics=0
      - TZ=Asia/Shanghai
    
    volumes:
      # Optional: Mount logs directory
      - ./logs:/app/logs
    
    networks:
      - dbaccess-network
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/dbaccess/ping?db=master"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.2'

networks:
  dbaccess-network:
    driver: bridge

# Optional: If you need a database container for testing
# Uncomment the following section
#
# services:
#   mssql:
#     image: mcr.microsoft.com/mssql/server:2022-latest
#     container_name: dbaccess-mssql
#     restart: unless-stopped
#     ports:
#       - "1433:1433"
#     environment:
#       - ACCEPT_EULA=Y
#       - SA_PASSWORD=YourStrong!Passw0rd
#       - MSSQL_PID=Express
#     volumes:
#       - mssql-data:/var/opt/mssql
#     networks:
#       - dbaccess-network
#
# volumes:
#   mssql-data: