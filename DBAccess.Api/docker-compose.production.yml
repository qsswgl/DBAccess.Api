# Docker Compose for Production Deployment
# 用于从私有仓库部署 .NET 8 应用

services:
  dbaccess-api:
    image: 43.138.35.183:5000/dbaccess-api:net8-latest
    container_name: dbaccess-api-production
    restart: unless-stopped
    
    ports:
      - "80:8080"      # HTTP
      - "5189:8080"    # 备用 HTTP
    
    environment:
      # 应用环境
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      
      # 数据库连接
      - DBACCESS_MSSQL_SERVER=61.163.200.245
      - DBACCESS_MSSQL_USER=sa
      - DBACCESS_MSSQL_PASSWORD=GalaxyS24
      
      # 安全配置
      - DBACCESS_SQL_WHITELIST=false
      - DBACCESS_SQL_STRICT_WHERE=false
      - DBACCESS_MAX_PAGE_SIZE=1000
      - DBACCESS_MAX_OFFSET=10000
      
      # 证书配置（如果需要 HTTPS）
      - CERT_PASSWORD=${CERT_PASSWORD:-}
      
      # 系统配置
      - DOTNET_RUNNING_IN_CONTAINER=true
      - DOTNET_EnableDiagnostics=0
      - TZ=Asia/Shanghai
    
    volumes:
      # 证书挂载（如果需要 HTTPS）
      - ./certificates:/app/certificates:ro
      # 日志挂载
      - ./logs:/app/logs
      # 配置文件挂载（可选）
      - ./appsettings.Production.json:/app/appsettings.Production.json:ro
    
    # 健康检查
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/dbaccess/ping?db=master"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # 资源限制
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M
    
    # 网络配置
    networks:
      - dbaccess-network
    
    # 日志配置
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx 反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: dbaccess-nginx
    restart: unless-stopped
    
    ports:
      - "8080:80"
      - "8443:443"
    
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certificates:/etc/nginx/ssl:ro
    
    depends_on:
      - dbaccess-api
    
    networks:
      - dbaccess-network

networks:
  dbaccess-network:
    driver: bridge

volumes:
  dbaccess-logs:
    driver: local